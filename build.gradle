

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'

group = 'com.flexisaf.sdk.paystack'
version = '1.1.0'
repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.0'
    compile 'com.jayway.restassured:rest-assured:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.0'

    testCompile 'junit:junit:4.12'
}


ext {
    pomFilePath = "${project.projectDir}/tmp/pom.xml"
    pomFile = file(pomFilePath)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

task vscodeClasspathFile {
    description 'Generates classpath file for the Visual Studio Code java plugin'
    ext.destFile = file("$buildDir/classpath.txt")
    outputs.file destFile
    doLast {
        def classpathString = configurations.compile.collect { it.absolutePath }.join(File.pathSeparator)
        if (!destFile.parentFile.exists()) {
            destFile.parentFile.mkdirs()
        }
        assert destFile.parentFile.exists()
        destFile.text = classpathString
    }
}

task vscodeJavaconfigFile(dependsOn: vscodeClasspathFile) {
    description 'Generates javaconfig.json file for the Visual Studio Code java plugin'

    def relativePath = { File f ->
        f.absolutePath - "${project.rootDir.absolutePath}/"
    }
    ext.destFile = file("javaconfig.json")
    ext.config = [
            sourcePath     : sourceSets.collect { it.java.srcDirs }.flatten().collect { relativePath(it) },
            classPathFile  : relativePath(tasks.getByPath('vscodeClasspathFile').outputs.files.singleFile),
            outputDirectory: relativePath(new File(buildDir, 'vscode-classes'))
    ]
    doLast {
        def jsonContent = groovy.json.JsonOutput.toJson(ext.config)
        destFile.text = groovy.json.JsonOutput.prettyPrint(jsonContent)
    }
}

task vscode(dependsOn: vscodeJavaconfigFile) {
    description 'Generates config files for the Visual Studio Code java plugin'
    group 'vscode'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "com.flexisaf.sdk.paystack"
            artifactId "paystack"
            version "1.1.0"
            from components.java
        }
    }

    repositories {
        maven {
            credentials {
                username System.env.MAVEN_USER
                password System.env.MAVEN_PASSWORD
            }
            url 'http://artifactory.flexisaf.com/artifactory/libs-release-local'
        }
    }
}
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenCentral().url)
            pom.groupId = rootProject.group
            pom.artifactId = project.name
            pom.version = rootProject.version
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.10"
}


task travisBuild(dependsOn: ['clean', 'test', 'build', 'publish']) {}